# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import helloworld_pb2 as helloworld__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in helloworld_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class GreeterStub(object):
    """Define the Hello service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/helloworld.Greeter/SayHello',
                request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
                response_deserializer=helloworld__pb2.HelloReply.FromString,
                _registered_method=True)
        self.VoidFunction = channel.unary_unary(
                '/helloworld.Greeter/VoidFunction',
                request_serializer=helloworld__pb2.VoidRequest.SerializeToString,
                response_deserializer=helloworld__pb2.VoidReply.FromString,
                _registered_method=True)
        self.LongFunction = channel.unary_unary(
                '/helloworld.Greeter/LongFunction',
                request_serializer=helloworld__pb2.LongOperationRequest.SerializeToString,
                response_deserializer=helloworld__pb2.LongOperationReply.FromString,
                _registered_method=True)
        self.Long8Function = channel.unary_unary(
                '/helloworld.Greeter/Long8Function',
                request_serializer=helloworld__pb2.Long8OperationRequest.SerializeToString,
                response_deserializer=helloworld__pb2.LongOperationReply.FromString,
                _registered_method=True)
        self.StringOperation = channel.unary_unary(
                '/helloworld.Greeter/StringOperation',
                request_serializer=helloworld__pb2.StringOperationRequest.SerializeToString,
                response_deserializer=helloworld__pb2.StringOperationReply.FromString,
                _registered_method=True)
        self.ComplexOperation = channel.unary_unary(
                '/helloworld.Greeter/ComplexOperation',
                request_serializer=helloworld__pb2.ComplexOperationRequest.SerializeToString,
                response_deserializer=helloworld__pb2.ComplexOperationReply.FromString,
                _registered_method=True)
        self.ComplexOperation2 = channel.unary_unary(
                '/helloworld.Greeter/ComplexOperation2',
                request_serializer=helloworld__pb2.ComplexOperation2Request.SerializeToString,
                response_deserializer=helloworld__pb2.ComplexOperation2Reply.FromString,
                _registered_method=True)
        self.MultipleString = channel.unary_unary(
                '/helloworld.Greeter/MultipleString',
                request_serializer=helloworld__pb2.MultipleStringRequest.SerializeToString,
                response_deserializer=helloworld__pb2.MultipleStringReply.FromString,
                _registered_method=True)


class GreeterServicer(object):
    """Define the Hello service
    """

    def SayHello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoidFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LongFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Long8Function(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StringOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComplexOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComplexOperation2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MultipleString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=helloworld__pb2.HelloRequest.FromString,
                    response_serializer=helloworld__pb2.HelloReply.SerializeToString,
            ),
            'VoidFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.VoidFunction,
                    request_deserializer=helloworld__pb2.VoidRequest.FromString,
                    response_serializer=helloworld__pb2.VoidReply.SerializeToString,
            ),
            'LongFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.LongFunction,
                    request_deserializer=helloworld__pb2.LongOperationRequest.FromString,
                    response_serializer=helloworld__pb2.LongOperationReply.SerializeToString,
            ),
            'Long8Function': grpc.unary_unary_rpc_method_handler(
                    servicer.Long8Function,
                    request_deserializer=helloworld__pb2.Long8OperationRequest.FromString,
                    response_serializer=helloworld__pb2.LongOperationReply.SerializeToString,
            ),
            'StringOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.StringOperation,
                    request_deserializer=helloworld__pb2.StringOperationRequest.FromString,
                    response_serializer=helloworld__pb2.StringOperationReply.SerializeToString,
            ),
            'ComplexOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.ComplexOperation,
                    request_deserializer=helloworld__pb2.ComplexOperationRequest.FromString,
                    response_serializer=helloworld__pb2.ComplexOperationReply.SerializeToString,
            ),
            'ComplexOperation2': grpc.unary_unary_rpc_method_handler(
                    servicer.ComplexOperation2,
                    request_deserializer=helloworld__pb2.ComplexOperation2Request.FromString,
                    response_serializer=helloworld__pb2.ComplexOperation2Reply.SerializeToString,
            ),
            'MultipleString': grpc.unary_unary_rpc_method_handler(
                    servicer.MultipleString,
                    request_deserializer=helloworld__pb2.MultipleStringRequest.FromString,
                    response_serializer=helloworld__pb2.MultipleStringReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'helloworld.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('helloworld.Greeter', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Define the Hello service
    """

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/SayHello',
            helloworld__pb2.HelloRequest.SerializeToString,
            helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VoidFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/VoidFunction',
            helloworld__pb2.VoidRequest.SerializeToString,
            helloworld__pb2.VoidReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LongFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/LongFunction',
            helloworld__pb2.LongOperationRequest.SerializeToString,
            helloworld__pb2.LongOperationReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Long8Function(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/Long8Function',
            helloworld__pb2.Long8OperationRequest.SerializeToString,
            helloworld__pb2.LongOperationReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StringOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/StringOperation',
            helloworld__pb2.StringOperationRequest.SerializeToString,
            helloworld__pb2.StringOperationReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ComplexOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/ComplexOperation',
            helloworld__pb2.ComplexOperationRequest.SerializeToString,
            helloworld__pb2.ComplexOperationReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ComplexOperation2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/ComplexOperation2',
            helloworld__pb2.ComplexOperation2Request.SerializeToString,
            helloworld__pb2.ComplexOperation2Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MultipleString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/helloworld.Greeter/MultipleString',
            helloworld__pb2.MultipleStringRequest.SerializeToString,
            helloworld__pb2.MultipleStringReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
